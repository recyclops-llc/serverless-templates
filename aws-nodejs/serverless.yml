service: service-name # TODO: Update with service name (the name of the microservice)

provider:
  name: aws
  runtime: nodejs12.x

  stage: ${env:STAGE}
  region: ${env:AWSREGION}

  tags:
    department: department-name # TODO: Add department name
    service: self.service
    environment: self.provider.stage # For keeping track of costs between various stages (e.g. dev vs prod)

  # Define service wide environment variables here
  # environment:
  #   variable1: value1

package: # https://www.serverless.com/framework/docs/providers/aws/guide/packaging#package-configuration
  include:
    - controllers/**
    - services/**
    - node_modules/**
  # exclude:
  #   - .env
  #   - .env.development
  #   - .env.production
  #   - .eslintignore
  #   - .eslintrc.json
  #   - .gitignore
  #   - package-lock.json
  #   - .prettierignore
  #   - .prettierrc.json
  #   - README.md
  #   - serverless.yml
  #   - tests/**

functions:
  ## TODO:
  # Rename line 49
  # This is the function name. By convention we name our controller files and functions by the event type trigger (e.g. api, sqs, sns), follwed by file name (e.g. api-post-create-user)
  api-post-create-user:
    memorySize: 128
    timeout: 5
    handler: controllers/api-post-create-user.handler # TODO: Update file name, then update here
    events: # https://www.serverless.com/framework/docs/providers/aws/events/
      - http:
          path: user/
          method: post
          cors: true
    # environment: # Define function specific environment variables here
    #   ENV_VARIABLE: ${ENV_VALUE}
  sqs-create-user:
    memorySize: 128
    timeout: 20
    handler: controllers/sqs-create-user.handler #TODO: Rename file and update here
    events:
      - sqs:
          arn: !GetAtt sqsCreateUser.Arn # TODO: Update with correct logical id
          batchSize: 1
  sqs-dlq-create-user: # TODO: Rename file and update here
    memorySize: 128
    timeout: 20
    handler: controllers/sqs-dlq-create-user.handler #TODO: Rename file and update here
    events:
      - sqs:
          arn: !GetAtt sqsCreateUserDLQ.Arn # TODO: Update with correct logical id
          batchSize: 1

resources: # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
  Resources:
    ## TODO:
    # Rename line 75 -- this is the resource logical id (see link at top of page for more info)
    # We use a convention of putting the resource type (e.g. sns, sqs, dynamo) first, and then camelCasing the rest
    snsCreateUser:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:provider.stage}-create-user
        Subscription:
          - Endpoint: !GetAtt sqsCreateUser.Arn # TODO: Update with correct logical id
            Protocol: sqs
    sqsCreateUser: # TODO: Rename
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:provider.stage}-create-user # TODO: Rename everything after "${self:provider.stage}-""
        MessageRetentionPeriod: 1209600 # 14 days in seconds
        ReceiveMessageWaitTimeSeconds: 20
        VisibilityTimeout: 120
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt sqsCreateUserDLQ.Arn # TODO: Update with correct logical id
          maxReceiveCount: 1
      sqsCreateUserDLQ:
        Type: AWS::SQS::Queue
        Properties:
          QueueName: ${self:provider.stage}-create-user-dlq # TODO: Rename everything after "${self:provider.stage}-""
          MessageRetentionPeriod: 1209600

plugins:
  - serverless-dotenv-plugin # https://www.serverless.com/plugins/serverless-dotenv-plugin
  - serverless-offline # https://www.serverless.com/plugins/serverless-offline
